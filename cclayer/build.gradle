plugins {
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

base {
    archivesName = project.archives_base_name
}

version = "${project.mod_version}-${project.layer_version}+${rootProject.minecraft_base_version}"
group = project.maven_group

architectury {
    platformSetupLoomIde()
    forge()
}

repositories {
    maven { url "https://maven.neoforged.net/releases/" }
    maven { url "https://maven.su5ed.dev/releases" }
    maven { url "https://maven.shedaniel.me/" }
    maven { url 'https://jitpack.io' }
    maven { url "https://api.modrinth.com/maven" }
    maven { url "https://maven.florens.be/releases" }
    mavenCentral()
    mavenLocal()
}

//evaluationDependsOn(':common')
//evaluationDependsOn(':neoforge')

dependencies {
    forge "net.neoforged:forge:${rootProject.neoforge_version}"

    developmentForge implementation(project(path: ":common", configuration: "namedElements"))
    localRuntime compileOnly(project(path: ":neoforge", configuration: "namedElements"))

    compileOnly annotationProcessor("io.github.llamalad7:mixinextras-common:0.3.5")
    implementation include("io.github.llamalad7:mixinextras-forge:0.3.5")

    modRuntimeOnly ("me.shedaniel.cloth:cloth-config-forge:${rootProject.cloth_version}")

    forgeRuntimeLibrary("io.wispforest:endec:${rootProject.endec_version}")
    forgeRuntimeLibrary("io.wispforest.endec:gson:${rootProject.endec_gson_version}")
    forgeRuntimeLibrary("io.wispforest.endec:netty:${rootProject.endec_netty_version}")

    modCompileOnly ("maven.modrinth:aether:1.20.1-1.4.1-neoforge")

    modImplementation ("org.sinytra.forgified-fabric-api:fabric-api-base:0.4.42+e0539096d1"){ exclude group: "fabric-api" }

    //modRuntimeOnly ("dev.architectury:architectury-forge:9.2.14")
    //modRuntimeOnly ("maven.modrinth:artifacts:9.5.4")
    //modRuntimeOnly ("be.florens:expandability-forge:9.0.4")
}

processResources {
    filesMatching("META-INF/mods.toml") {
        expand "version": "${project.mod_version}+${rootProject.minecraft_base_version}",
                "layer_version": "0.${project.layer_version}"
    }
    inputs.property "META-INF/mods.toml", ["${project.mod_version}+${rootProject.minecraft_base_version}", "0.${project.layer_version}"]
}

loom {
    forge  {
        mixinConfig "cclayer.mixins.json"
        mixinConfig "cclayer_curios.mixins.json"
    }

    loom.runs.client {
        var neoForgeProject = project(":neoforge");
        mods {
            create("${neoForgeProject.archives_base_name}") {
                sourceSet neoForgeProject.sourceSets.main
            }
            create("${project.archives_base_name}") {
                sourceSet sourceSets.main
            }
        }
        source sourceSets.main
    }

    loom.runs.server {
        var neoForgeProject = project(":neoforge");
        mods {
            create("${neoForgeProject.archives_base_name}") {
                sourceSet neoForgeProject.sourceSets.main
            }
            create("${project.archives_base_name}") {
                sourceSet sourceSets.main
            }
        }
        source sourceSets.main
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = "${rootProject.archives_base_name}-${project.name}"
            from components.java
        }
    }
    repositories {}
}
